/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package camelinaction;

import org.apache.camel.CamelContext;
import org.apache.camel.ProducerTemplate;
import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.impl.DefaultCamelContext;

import edu.uchicago.adamzhang22.analytics_engine.AnalyticsEngine;

import javax.jms.ConnectionFactory;
import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.camel.component.jms.JmsComponent;

public class Trial {

    public static void main(String args[]) throws Exception {
        // create CamelContext
        CamelContext context = new DefaultCamelContext();

        // connect to ActiveMQ JMS broker listening on localhost on port 61616
        ConnectionFactory connectionFactory = 
        	new ActiveMQConnectionFactory("tcp://localhost:61616");
        context.addComponent("jms",
            JmsComponent.jmsComponentAutoAcknowledge(connectionFactory));
         
        
        ProducerTemplate template = context.createProducerTemplate();
        
        context.start();
        
        /*
        // Send the stats to JMS topic
        template.sendBodyAndHeader("jms:topic:AAD",engine.getStat("MSFT", "AAD"), "ticker", "MSFT");
        template.sendBodyAndHeader("jms:topic:MaxAD",engine.getStat("MSFT", "MaxAD"));
        template.sendBodyAndHeader("jms:topic:MedAD",engine.getStat("MSFT", "MedAD"));
        template.sendBodyAndHeader("jms:topic:STDEV",engine.getStat("MSFT", "STDEV"));

        // Send IBM stats
        template.sendBodyAndHeader("jms:topic:AAD",engine.getStat("IBM", "AAD"));
        template.sendBodyAndHeader("jms:topic:MaxAD",engine.getStat("IBM", "MaxAD"));
        template.sendBodyAndHeader("jms:topic:MedAD",engine.getStat("IBM", "MedAD"));
        template.sendBodyAndHeader("jms:topic:STDEV",engine.getStat("IBM", "STDEV"));

        // Send ORCL stats
        template.sendBodyAndHeader("jms:topic:AAD",engine.getStat("ORCL", "AAD"));
        template.sendBodyAndHeader("jms:topic:MaxAD",engine.getStat("ORCL", "MaxAD"));
        template.sendBodyAndHeader("jms:topic:MedAD",engine.getStat("ORCL", "MedAD"));
        template.sendBodyAndHeader("jms:topic:STDEV",engine.getStat("ORCL", "STDEV"));
        */
		
        
        Thread.sleep(3000);
        context.stop();
    }
}